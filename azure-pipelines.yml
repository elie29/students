trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotnetVersion: '9.0.x'
  webAppName: 'student-management-api'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET SDK'
      inputs:
        packageType: 'sdk'
        version: '$(dotnetVersion)'
    
    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project'
      inputs:
        command: 'build'
        projects: 'StudentManagement.Api/StudentManagement.Api.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Run unit tests'
      inputs:
        command: 'test'
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
        testRunTitle: 'Unit Tests'
      continueOnError: true # Set to false in real production scenarios

    - task: DotNetCoreCLI@2
      displayName: 'Publish API'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: 'StudentManagement.Api/StudentManagement.Api.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'api'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy to Production'
  dependsOn: Build
  condition: succeeded() # Only run if Build stage was successful
  jobs:
  - job: Deploy
    steps:
    - download: current
      artifact: api

    - task: AzureWebApp@1
      displayName: 'Deploy to Azure Web App'
      inputs:
        azureSubscription: 'Your-Azure-Subscription'
        appType: 'webApp'
        appName: '$(webAppName)'
        package: '$(Pipeline.Workspace)/api/*.zip'
        deploymentMethod: 'auto' 